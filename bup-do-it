#!/bin/bash
BACKUP_DRIVE=/media/backup
BUP=bup
BUP_DIR=${BACKUP_DRIVE}/${BUP}


mountit() {
	rm /tmp/backupError.log
	mount ${BACKUP_DRIVE} -o remount,rw >> /tmp/backupError.log
	cat /tmp/backupError.log >> ${BACKUP_DRIVE}/backupError.log
}
unmountit() {
        mount ${BACKUP_DRIVE} -o remount,ro
}
getOwner() {
	echo $(ls -l ${BACKUP_DRIVE} | grep ${BUP} | awk '{print $3}')
}



backup() {
	mountit
	echo "beginning backup: $(date)" >> ${BACKUP_DRIVE}/backupError.log

	bup -d ${BUP_DIR} index --exclude=/home/christian/./gvfs/ --exclude=/home/christian/.cache/ --exclude=~/home/christian/To.Sort/ ~ >> ${BACKUP_DRIVE}/backupError.log

	echo ""
	echo "beginning Saving: $(date)" >> ${BACKUP_DRIVE}/backupError.log

	bup -d ${BUP_DIR} save -n $(hostname) ~ >> ${BACKUP_DRIVE}/backupError.log
	echo ""
	echo "setting Directory Owner back to owner"
	chown -R $(getOwner):$(getOwner) $BUP_DIR	
	unmountit
	echo "backup Done"
	echo ""
}

if [ "$1" != "" ]; then
        $1
        exit 0
else
	backup
fi

